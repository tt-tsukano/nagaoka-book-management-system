@model BookManagement.ViewModels.TitleSearchViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "書籍一覧";
}

<h2>書籍検索</h2>

<form method="post">
    <div class="form-group">
        <label for="Title">タイトル:</label>
        <input type="text" class="form-control" placeholder="検索キーワードを入力してください" id="Title" name="Title" value="@Model.Title" />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">検索</button>
        <a asp-action="Index" class="btn btn-secondary">リセット</a>
    </div>
</form>
<br />

<div class="mb-4">
    <a asp-controller="Home" asp-action="CreateEmail" class="btn btn-primary">
        メール作成
    </a>
</div>



@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* 新しく追加する警告メッセージ用のコード *@
@if (TempData["Warning"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["Warning"]
        @if (TempData["ErrorDetails"] != null)
        {
            <hr>
            <div class="small">
                @Html.Raw(TempData["ErrorDetails"])
            </div>
        }
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (User.Identity.IsAuthenticated)
{
    <div class="mb-4">
        <a asp-controller="Home" asp-action="CreateEmail" class="btn btn-primary">
            メール作成
        </a>
    </div>
    <h3>あなたが借りている書籍</h3>
    @if (Model.UserBooks != null && Model.UserBooks.Any())
    {
        <table class="table text-center table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>タイトル</th>
                    <th>著者</th>
                    <th>出版年</th>
                    <th>返却予定日</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UserBooks)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td class="fst-italic">
                            <a asp-controller="Books" asp-action="Details" asp-route-id="@item.Id">
                                @item.Title
                            </a>                            
                        </td>
                        <td>@item.Author</td>
                        <td>@item.PublishedYear 年</td>
                        <td>
                            @if (@item.ReturnDate.HasValue)
                            {
                                var daysLeft = (item.ReturnDate.Value - DateTime.Now).Days;
                                if (daysLeft < 0)
                                {
                                    <span class="text-danger">返却期日超過（@item.ReturnDate.Value.ToString("yyyy/MM/dd")）</span>
                                }
                                else if (daysLeft <= 3)
                                {
                                    <span class="text-warning">@item.ReturnDate.Value.ToString("yyyy/MM/dd")（あと@(daysLeft)日）</span>
                                }
                                else
                                {
                                    <span>@item.ReturnDate.Value.ToString("yyyy/MM/dd")（あと@(daysLeft)日）</span>
                                }
                            }
                        </td>
                        <td>
                            <a asp-controller="Books" asp-action="Return" asp-route-id="@item.Id" class="btn btn-success">返却する</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-danger">現在借りている書籍はありません</p>
    }
}
else
{
   <p class="text-danger">右上のログインボタンからログインすることができます。</p>
}

@if (Model.Results != null && Model.Results.Any())
{
    <div>
        <h1 class="display-4 text-center">書籍一覧</h1>
        <table class="table text-center table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>タイトル</th>
                    <th>著者</th>
                    <th>出版年</th>
                    <th>返却予定日</th>
                    <th>貸出状況</th>
                    <th>-</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Results)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td class="fst-italic">
                            <a asp-controller="Books" asp-action="Details" asp-route-id="@item.Id">
                                @item.Title
                            </a>
                        </td>
                        <td>@item.Author</td>
                        <td>@item.PublishedYear 年</td>
                        <td>
                            @if (@item.ReturnDate == null)
                            {
                                <h6>-</h6>
                            }
                            else
                            {
                                <span>@item.ReturnDate.Value.ToString("yyyy/MM/dd")</span>
                            }
                        </td>
                        <td>
                            @if (item.BorrowedStatus == true)
                            {
                                <span class="text-danger border border-danger border-2 fs-6">貸出中</span><br />
                                <small class="text-muted">@(item.BorrowerEmail?.Split('@')[0])</small>
                            }
                            else
                            {
                                <span class="text-primary border border-primary border-2">貸出可</span>
                            }
                        </td>
                        <td>
                            @if (item.BorrowedStatus == true)
                            {
                                @if (User.Identity.IsAuthenticated && item.UserId == int.Parse(UserManager.GetUserId(User)))
                                {
                                    <a asp-controller="Books" asp-action="Return" asp-route-id="@item.Id">
                                        <input type="submit" value="返却する" class="btn btn-success" />
                                    </a>
                                }
                                else
                                {
                                    <span class="text-danger fw-bold">×</span>
                                }
                            }
                            else
                            {
                                <a asp-controller="Books" asp-action="Confirm" asp-route-id="@item.Id">
                                    <input type="submit" value="貸出申請" class="btn btn-primary" />
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}
else
{
    <p class="text-danger">該当する書籍が見つかりませんでした。</p>
}